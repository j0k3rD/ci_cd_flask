name: GitHub Actions Flask-HelloWorld

env:
  REPO_NAME: ${{ github.event.repository.name }}
  IMAGE_NAME: ${{ secrets.ACR_NAME }}.azurecr.io/helloflask:v.0.1.0
  DNS_NAME: helloflasksp-${{ github.run_id }}-${{ github.run_attempt }}

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ github.workspace }}
    steps:
      - name: 'Check Commit Message'
        id: check_commit
        run: |
          if [[ "${{ github.event.head_commit.message }}" == *"deploy"* ]]; then
            echo "::set-output name=action::deploy"
          elif [[ "${{ github.event.head_commit.message }}" == *"build"* ]]; then
            echo "::set-output name=action::build"
          else
            echo "::set-output name=action::none"
          fi

      - name: 'Build'
        run: |
          if [[ "${{ steps.check_commit.outputs.action }}" == "deploy" || "${{ steps.check_commit.outputs.action }}" == "build" ]]; then
            docker build . -t ${{ env.IMAGE_NAME }}
          fi

      - name: 'Push Docker Image'
        run: |
          if [[ "${{ steps.check_commit.outputs.action }}" == "deploy" || "${{ steps.check_commit.outputs.action }}" == "build" ]]; then
            docker push ${{ env.IMAGE_NAME }}
          fi

  deploy:
    runs-on: ubuntu-latest
    needs: build
    # Si la acci√≥n es deploy, se ejecuta el job
    if: needs.build.outputs.action == 'deploy'
    defaults:
      run:
        shell: bash
        working-directory: ${{ github.workspace }}
    steps:
      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Deploy Container Instance'
        uses: azure/aci-deploy@v1
        with:
          location: ${{ secrets.LOCATION }}
          name: helloflask
          resource-group: ${{ secrets.RESOURCE_GROUP }}
          image: ${{ env.IMAGE_NAME }}
          dns-name-label: ${{ env.DNS_NAME }}
          registry-username: ${{ secrets.REGISTRY_USERNAME }}
          registry-password: ${{ secrets.REGISTRY_PASSWORD }}
          ports: 5000
          cpu: 1
          memory: 1

      - name: 'Logout'
        run: |
          az logout